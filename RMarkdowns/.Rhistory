countFiles = list.files("/Users/k6-c02dm8d6ml7h/Desktop/Splicing/CountFiles", pattern=".txt$", full.names=TRUE)
flattenedFile = list.files("/Users/k6-c02dm8d6ml7h/Desktop/Splicing/", pattern="gff$", full.names=TRUE)
sample_info <- read.delim("~/Desktop//K.Tammimies_20_01_sample_info.txt", header=TRUE)
sample_info <- separate(sample_info, "User.ID", into = c("sample_number", "cell_line", "treatment"), sep = "_", remove = FALSE )
library(DEXSeq)
library(biomaRt)
library(VennDiagram)
library(tidyverse)
sample_info <- separate(sample_info, "User.ID", into = c("sample_number", "cell_line", "treatment"), sep = "_", remove = FALSE )
sample_info <- sample_info[1:43,]
source("../R_codes/BPA_F.R")
source("../R_codes/Eth_F.R")
source("../R_codes/FH_F.R")
source("../R_codes/Pb_F.R")
source("../R_codes//VPA_F.R")
source("../R_codes/Zn_F.R")
sample_info$Pb <- Pb_F(sample_info)
sample_info$VPA <- VPA_F(sample_info)
sample_info$BPA <- BPA_F(sample_info)
sample_info$Eth <- Eth_F(sample_info)
sample_info$FH <- FH_F(sample_info)
sample_info$Zn <- Zn_F(sample_info)
names(sample_info)[names(sample_info) == "Eth"] <- "condition"
dxd_Eth = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sample_info,
design= ~ User.ID + exon + condition:exon,
flattenedfile=flattenedFile )
dxd_Eth <- estimateSizeFactors(dxd_Eth)
dxd_Eth <- estimateDispersions( dxd_Eth, formula = formulaFullModel )
formulaFullModel    =  ~ sample + exon + cell_line:exon + condition:exon
formulaReducedModel =  ~ sample + exon + cell_line:exon
dxd_Eth = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sample_info,
design= ~ User.ID + exon + condition:exon,
flattenedfile=flattenedFile )
dxd_Eth <- estimateSizeFactors(dxd_Eth)
dxd_Eth <- estimateSizeFactors(dxd_Eth)
dxd_Eth <- estimateDispersions( dxd_Eth, formula = formulaFullModel )
plotDispEsts(dxd_Eth)
dxd_Eth = testForDEU( dxd_Eth,
reducedModel = formulaReducedModel,
fullModel = formulaFullModel )
dxd_Eth <- estimateExonFoldChanges(dxd_Eth)
dxr_Eth = DEXSeqResults( dxd_Eth )
plotMA(dxr_Eth)
dxr_Eth_sig <- as.data.frame(dxr_Eth[dxr_Eth$padj < 0.05 & !is.na(dxr_Eth$padj),]) #padj <0.05
dxr_Eth_sig <- dxr_Eth_sig[dxr_Eth_sig$log2fold_treated_control < -0.58 | dxr_Eth_sig$log2fold_treated_control > 0.58,]  # -1<Log2FC<1
dxr_Eth_sig <- dxr_Eth_sig[dxr_Eth_sig$exonBaseMean>= 10,]
load("~/Desktop/Splicing/RData/GeEn_Global_DEU.RData")
countFiles = list.files("/Users/k6-c02dm8d6ml7h/Desktop/Splicing/CountFiles", pattern=".txt$", full.names=TRUE)
flattenedFile = list.files("/Users/k6-c02dm8d6ml7h/Desktop/Splicing/", pattern="gff$", full.names=TRUE)
sample_info <- read.delim("~/Desktop//K.Tammimies_20_01_sample_info.txt", header=TRUE)
sample_info <- separate(sample_info, "User.ID", into = c("sample_number", "cell_line", "treatment"), sep = "_", remove = FALSE )
sample_info <- sample_info[1:43,]
sample_info$Pb <- Pb_F(sample_info)
sample_info$VPA <- VPA_F(sample_info)
sample_info$BPA <- BPA_F(sample_info)
sample_info$Eth <- Eth_F(sample_info)
sample_info$FH <- FH_F(sample_info)
sample_info$Zn <- Zn_F(sample_info)
formulaFullModel    =  ~ sample + exon + cell_line:exon + condition:exon
formulaReducedModel =  ~ sample + exon + cell_line:exon
names(sample_info)[names(sample_info) == "Zn"] <- "condition"
dxd_Zn = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sample_info,
design= ~ User.ID + exon + condition:exon,
flattenedfile=flattenedFile )
dxd_Zn <- estimateSizeFactors(dxd_Zn)
dxd_Zn <- estimateDispersions( dxd_Zn, formula = formulaFullModel )
save.image(file = "../RData/GeEn_Global_DEU.RData")
countFiles = list.files("/Users/k6-c02dm8d6ml7h/Desktop/Splicing/CountFiles", pattern=".txt$", full.names=TRUE)
flattenedFile = list.files("/Users/k6-c02dm8d6ml7h/Desktop/Splicing/", pattern="gff$", full.names=TRUE)
sample_info <- read.delim("~/Desktop//K.Tammimies_20_01_sample_info.txt", header=TRUE)
sample_info <- separate(sample_info, "User.ID", into = c("sample_number", "cell_line", "treatment"), sep = "_", remove = FALSE )
sample_info <- sample_info[1:43,]
source("../R_codes/BPA_F.R")
source("../R_codes/Eth_F.R")
source("../R_codes/FH_F.R")
source("../R_codes/Pb_F.R")
source("../R_codes//VPA_F.R")
source("../R_codes/Zn_F.R")
sample_info$Pb <- Pb_F(sample_info)
sample_info$VPA <- VPA_F(sample_info)
sample_info$BPA <- BPA_F(sample_info)
sample_info$Eth <- Eth_F(sample_info)
sample_info$FH <- FH_F(sample_info)
sample_info$Zn <- Zn_F(sample_info)
formulaFullModel    =  ~ sample + exon + cell_line:exon + condition:exon
formulaReducedModel =  ~ sample + exon + cell_line:exon
names(sample_info)[names(sample_info) == "Zn"] <- "condition"
dxd_Zn = DEXSeqDataSetFromHTSeq(
countFiles,
sampleData=sample_info,
design= ~ User.ID + exon + condition:exon,
flattenedfile=flattenedFile )
dxd_Zn <- estimateSizeFactors(dxd_Zn)
dxd_Zn <- estimateDispersions( dxd_Zn, formula = formulaFullModel )
plotDispEsts(dxd_Zn)
dxd_Zn = testForDEU( dxd_Zn,
reducedModel = formulaReducedModel,
fullModel = formulaFullModel )
dxd_Zn <- estimateExonFoldChanges(dxd_Zn)
dxr_Zn = DEXSeqResults( dxd_Zn )
plotMA(dxr_Zn)
dxr_Zn_sig <- as.data.frame(dxr_Zn[dxr_Zn$padj < 0.05 & !is.na(dxr_Zn$padj),]) #padj <0.05
dxr_Zn_sig <- dxr_Zn_sig[dxr_Zn_sig$log2fold_treated_control < -0.58 | dxr_Zn_sig$log2fold_treated_control > 0.58,]  # -1<Log2FC<1
dxr_Zn_sig <- dxr_Zn_sig[dxr_Zn_sig$exonBaseMean>= 10,]
paste0(names(dxd_Zn))
load("~/Desktop/Splicing/RData/GeEn_Global_DEU.RData")
